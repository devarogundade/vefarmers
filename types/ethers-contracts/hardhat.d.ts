/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */


import { ethers } from 'ethers'
import { DeployContractOptions, FactoryOptions, HardhatEthersHelpers as HardhatEthersHelpersBase} from "@nomicfoundation/hardhat-ethers/types";

import * as Contracts from "./index.js";

declare module "@nomicfoundation/hardhat-ethers/types" {
  interface HardhatEthersHelpers extends HardhatEthersHelpersBase {
  getContractFactory(name: 'FarmerRegistry', signerOrOptions?: ethers.Signer | FactoryOptions): Promise<Contracts.FarmerRegistry__factory>
getContractFactory(name: 'Fiat', signerOrOptions?: ethers.Signer | FactoryOptions): Promise<Contracts.Fiat__factory>
getContractFactory(name: 'FarmerRegistryInterface', signerOrOptions?: ethers.Signer | FactoryOptions): Promise<Contracts.FarmerRegistryInterface__factory>
getContractFactory(name: 'IX2EarnRewardsPool', signerOrOptions?: ethers.Signer | FactoryOptions): Promise<Contracts.IX2EarnRewardsPool__factory>
getContractFactory(name: 'LendingPoolInterface', signerOrOptions?: ethers.Signer | FactoryOptions): Promise<Contracts.LendingPoolInterface__factory>
getContractFactory(name: 'OracleInterface', signerOrOptions?: ethers.Signer | FactoryOptions): Promise<Contracts.OracleInterface__factory>
getContractFactory(name: 'PledgeManagerInterface', signerOrOptions?: ethers.Signer | FactoryOptions): Promise<Contracts.PledgeManagerInterface__factory>
getContractFactory(name: 'RewardsProviderInterface', signerOrOptions?: ethers.Signer | FactoryOptions): Promise<Contracts.RewardsProviderInterface__factory>
getContractFactory(name: 'VeFarmersFactoryInterface', signerOrOptions?: ethers.Signer | FactoryOptions): Promise<Contracts.VeFarmersFactoryInterface__factory>
getContractFactory(name: 'LendingPool', signerOrOptions?: ethers.Signer | FactoryOptions): Promise<Contracts.LendingPool__factory>
getContractFactory(name: 'InterestLib', signerOrOptions?: ethers.Signer | FactoryOptions): Promise<Contracts.InterestLib__factory>
getContractFactory(name: 'LendingPoolLogic', signerOrOptions?: ethers.Signer | FactoryOptions): Promise<Contracts.LendingPoolLogic__factory>
getContractFactory(name: 'Oracle', signerOrOptions?: ethers.Signer | FactoryOptions): Promise<Contracts.Oracle__factory>
getContractFactory(name: 'PledgeManager', signerOrOptions?: ethers.Signer | FactoryOptions): Promise<Contracts.PledgeManager__factory>
getContractFactory(name: 'RewardsProvider', signerOrOptions?: ethers.Signer | FactoryOptions): Promise<Contracts.RewardsProvider__factory>
getContractFactory(name: 'VeFarmersFactory', signerOrOptions?: ethers.Signer | FactoryOptions): Promise<Contracts.VeFarmersFactory__factory>

  getContractAt(name: 'FarmerRegistry', address: string | ethers.Addressable, signer?: ethers.Signer): Promise<Contracts.FarmerRegistry>
getContractAt(name: 'Fiat', address: string | ethers.Addressable, signer?: ethers.Signer): Promise<Contracts.Fiat>
getContractAt(name: 'FarmerRegistryInterface', address: string | ethers.Addressable, signer?: ethers.Signer): Promise<Contracts.FarmerRegistryInterface>
getContractAt(name: 'IX2EarnRewardsPool', address: string | ethers.Addressable, signer?: ethers.Signer): Promise<Contracts.IX2EarnRewardsPool>
getContractAt(name: 'LendingPoolInterface', address: string | ethers.Addressable, signer?: ethers.Signer): Promise<Contracts.LendingPoolInterface>
getContractAt(name: 'OracleInterface', address: string | ethers.Addressable, signer?: ethers.Signer): Promise<Contracts.OracleInterface>
getContractAt(name: 'PledgeManagerInterface', address: string | ethers.Addressable, signer?: ethers.Signer): Promise<Contracts.PledgeManagerInterface>
getContractAt(name: 'RewardsProviderInterface', address: string | ethers.Addressable, signer?: ethers.Signer): Promise<Contracts.RewardsProviderInterface>
getContractAt(name: 'VeFarmersFactoryInterface', address: string | ethers.Addressable, signer?: ethers.Signer): Promise<Contracts.VeFarmersFactoryInterface>
getContractAt(name: 'LendingPool', address: string | ethers.Addressable, signer?: ethers.Signer): Promise<Contracts.LendingPool>
getContractAt(name: 'InterestLib', address: string | ethers.Addressable, signer?: ethers.Signer): Promise<Contracts.InterestLib>
getContractAt(name: 'LendingPoolLogic', address: string | ethers.Addressable, signer?: ethers.Signer): Promise<Contracts.LendingPoolLogic>
getContractAt(name: 'Oracle', address: string | ethers.Addressable, signer?: ethers.Signer): Promise<Contracts.Oracle>
getContractAt(name: 'PledgeManager', address: string | ethers.Addressable, signer?: ethers.Signer): Promise<Contracts.PledgeManager>
getContractAt(name: 'RewardsProvider', address: string | ethers.Addressable, signer?: ethers.Signer): Promise<Contracts.RewardsProvider>
getContractAt(name: 'VeFarmersFactory', address: string | ethers.Addressable, signer?: ethers.Signer): Promise<Contracts.VeFarmersFactory>

  deployContract(name: 'FarmerRegistry', signerOrOptions?: ethers.Signer | DeployContractOptions): Promise<Contracts.FarmerRegistry>
deployContract(name: 'Fiat', signerOrOptions?: ethers.Signer | DeployContractOptions): Promise<Contracts.Fiat>
deployContract(name: 'FarmerRegistryInterface', signerOrOptions?: ethers.Signer | DeployContractOptions): Promise<Contracts.FarmerRegistryInterface>
deployContract(name: 'IX2EarnRewardsPool', signerOrOptions?: ethers.Signer | DeployContractOptions): Promise<Contracts.IX2EarnRewardsPool>
deployContract(name: 'LendingPoolInterface', signerOrOptions?: ethers.Signer | DeployContractOptions): Promise<Contracts.LendingPoolInterface>
deployContract(name: 'OracleInterface', signerOrOptions?: ethers.Signer | DeployContractOptions): Promise<Contracts.OracleInterface>
deployContract(name: 'PledgeManagerInterface', signerOrOptions?: ethers.Signer | DeployContractOptions): Promise<Contracts.PledgeManagerInterface>
deployContract(name: 'RewardsProviderInterface', signerOrOptions?: ethers.Signer | DeployContractOptions): Promise<Contracts.RewardsProviderInterface>
deployContract(name: 'VeFarmersFactoryInterface', signerOrOptions?: ethers.Signer | DeployContractOptions): Promise<Contracts.VeFarmersFactoryInterface>
deployContract(name: 'LendingPool', signerOrOptions?: ethers.Signer | DeployContractOptions): Promise<Contracts.LendingPool>
deployContract(name: 'InterestLib', signerOrOptions?: ethers.Signer | DeployContractOptions): Promise<Contracts.InterestLib>
deployContract(name: 'LendingPoolLogic', signerOrOptions?: ethers.Signer | DeployContractOptions): Promise<Contracts.LendingPoolLogic>
deployContract(name: 'Oracle', signerOrOptions?: ethers.Signer | DeployContractOptions): Promise<Contracts.Oracle>
deployContract(name: 'PledgeManager', signerOrOptions?: ethers.Signer | DeployContractOptions): Promise<Contracts.PledgeManager>
deployContract(name: 'RewardsProvider', signerOrOptions?: ethers.Signer | DeployContractOptions): Promise<Contracts.RewardsProvider>
deployContract(name: 'VeFarmersFactory', signerOrOptions?: ethers.Signer | DeployContractOptions): Promise<Contracts.VeFarmersFactory>

  deployContract(name: 'FarmerRegistry', args: any[], signerOrOptions?: ethers.Signer | DeployContractOptions): Promise<Contracts.FarmerRegistry>
deployContract(name: 'Fiat', args: any[], signerOrOptions?: ethers.Signer | DeployContractOptions): Promise<Contracts.Fiat>
deployContract(name: 'FarmerRegistryInterface', args: any[], signerOrOptions?: ethers.Signer | DeployContractOptions): Promise<Contracts.FarmerRegistryInterface>
deployContract(name: 'IX2EarnRewardsPool', args: any[], signerOrOptions?: ethers.Signer | DeployContractOptions): Promise<Contracts.IX2EarnRewardsPool>
deployContract(name: 'LendingPoolInterface', args: any[], signerOrOptions?: ethers.Signer | DeployContractOptions): Promise<Contracts.LendingPoolInterface>
deployContract(name: 'OracleInterface', args: any[], signerOrOptions?: ethers.Signer | DeployContractOptions): Promise<Contracts.OracleInterface>
deployContract(name: 'PledgeManagerInterface', args: any[], signerOrOptions?: ethers.Signer | DeployContractOptions): Promise<Contracts.PledgeManagerInterface>
deployContract(name: 'RewardsProviderInterface', args: any[], signerOrOptions?: ethers.Signer | DeployContractOptions): Promise<Contracts.RewardsProviderInterface>
deployContract(name: 'VeFarmersFactoryInterface', args: any[], signerOrOptions?: ethers.Signer | DeployContractOptions): Promise<Contracts.VeFarmersFactoryInterface>
deployContract(name: 'LendingPool', args: any[], signerOrOptions?: ethers.Signer | DeployContractOptions): Promise<Contracts.LendingPool>
deployContract(name: 'InterestLib', args: any[], signerOrOptions?: ethers.Signer | DeployContractOptions): Promise<Contracts.InterestLib>
deployContract(name: 'LendingPoolLogic', args: any[], signerOrOptions?: ethers.Signer | DeployContractOptions): Promise<Contracts.LendingPoolLogic>
deployContract(name: 'Oracle', args: any[], signerOrOptions?: ethers.Signer | DeployContractOptions): Promise<Contracts.Oracle>
deployContract(name: 'PledgeManager', args: any[], signerOrOptions?: ethers.Signer | DeployContractOptions): Promise<Contracts.PledgeManager>
deployContract(name: 'RewardsProvider', args: any[], signerOrOptions?: ethers.Signer | DeployContractOptions): Promise<Contracts.RewardsProvider>
deployContract(name: 'VeFarmersFactory', args: any[], signerOrOptions?: ethers.Signer | DeployContractOptions): Promise<Contracts.VeFarmersFactory>

    // default types
    getContractFactory(
      name: string,
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<ethers.ContractFactory>;
    getContractFactory(
      abi: any[],
      bytecode: ethers.BytesLike,
      signer?: ethers.Signer
    ): Promise<ethers.ContractFactory>;
    getContractAt(
      nameOrAbi: string | any[],
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<ethers.Contract>;
    deployContract(
      name: string,
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<ethers.Contract>;
    deployContract(
      name: string,
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<ethers.Contract>;
  }
}
  