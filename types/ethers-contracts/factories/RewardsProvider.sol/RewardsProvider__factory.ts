/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import type { Addressable } from "ethers";
import { Contract, ContractFactory, ContractTransactionResponse, Interface } from "ethers"
import type { Signer, BytesLike, BigNumberish, AddressLike, ContractDeployTransaction, ContractRunner } from "ethers"
import type { NonPayableOverrides } from "../../common.js"
  import type { RewardsProvider, RewardsProviderInterface } from "../../RewardsProvider.sol/RewardsProvider.js";

  const _abi = [
  {
    "inputs": [
      {
        "internalType": "bytes32",
        "name": "_appId",
        "type": "bytes32"
      },
      {
        "internalType": "uint256",
        "name": "_rate",
        "type": "uint256"
      },
      {
        "internalType": "contract IX2EarnRewardsPool",
        "name": "_rewardsPool",
        "type": "address"
      }
    ],
    "stateMutability": "nonpayable",
    "type": "constructor"
  },
  {
    "anonymous": false,
    "inputs": [
      {
        "indexed": false,
        "internalType": "bytes32",
        "name": "appId",
        "type": "bytes32"
      }
    ],
    "name": "AppIdChanged",
    "type": "event"
  },
  {
    "anonymous": false,
    "inputs": [
      {
        "indexed": false,
        "internalType": "uint256",
        "name": "newRate",
        "type": "uint256"
      }
    ],
    "name": "RateChanged",
    "type": "event"
  },
  {
    "anonymous": false,
    "inputs": [
      {
        "indexed": false,
        "internalType": "address",
        "name": "newRewardsPool",
        "type": "address"
      }
    ],
    "name": "RewardsPoolChanged",
    "type": "event"
  },
  {
    "inputs": [],
    "name": "appId",
    "outputs": [
      {
        "internalType": "bytes32",
        "name": "",
        "type": "bytes32"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [],
    "name": "rate",
    "outputs": [
      {
        "internalType": "uint256",
        "name": "",
        "type": "uint256"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [],
    "name": "rewardsPool",
    "outputs": [
      {
        "internalType": "contract IX2EarnRewardsPool",
        "name": "",
        "type": "address"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "bytes32",
        "name": "newAppId",
        "type": "bytes32"
      }
    ],
    "name": "setAppId",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "uint256",
        "name": "newRate",
        "type": "uint256"
      }
    ],
    "name": "setRate",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "contract IX2EarnRewardsPool",
        "name": "newRewardsPool",
        "type": "address"
      }
    ],
    "name": "setRewardsPool",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  }
] as const;

  const _bytecode = "0x6080604052348015600f57600080fd5b506040516102db3803806102db833981016040819052602c916058565b600092909255600155600280546001600160a01b0319166001600160a01b03909216919091179055609c565b600080600060608486031215606c57600080fd5b83516020850151604086015191945092506001600160a01b0381168114609157600080fd5b809150509250925092565b610230806100ab6000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c80630359fea9146100675780632c4e722e1461009757806334fcf437146100ae5780633ad4f02a146100c35780637c000293146100d657806380afdea8146100e9575b600080fd5b60025461007a906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b6100a060015481565b60405190815260200161008e565b6100c16100bc3660046101b1565b6100f2565b005b6100c16100d13660046101b1565b61012e565b6100c16100e43660046101ca565b610163565b6100a060005481565b60018190556040518181527f595a30f13a69b616c4d568e2a2b7875fdfe86e4300a049953c76ee278f8f3f10906020015b60405180910390a150565b60008190556040518181527f4a83cbaab6792402d46dfdc8925a0b359397459f640fcd1920a768c8a7e28a5b90602001610123565b600280546001600160a01b0319166001600160a01b0383169081179091556040519081527f657bb19de5473f7be7de9ccbcfa6d9aabcb3cfd199aef85e949a1d8570c290ab90602001610123565b6000602082840312156101c357600080fd5b5035919050565b6000602082840312156101dc57600080fd5b81356001600160a01b03811681146101f357600080fd5b939250505056fea264697066735822122037d8c9cce5e7d4f281301c99d1efcedd54b76b59b49ff543fb8c431ee3917ec764736f6c634300081c0033";

  
      type RewardsProviderConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;

      const isSuperArgs = (xs: RewardsProviderConstructorParams): xs is ConstructorParameters<typeof ContractFactory> =>
        xs.length > 1
    

  export class RewardsProvider__factory extends ContractFactory {
    
      constructor(...args: RewardsProviderConstructorParams) {
        if (isSuperArgs(args)) {
          super(...args);
        } else {
          super(_abi, _bytecode, args[0]);
        }
        
      }
    
    override getDeployTransaction(_appId: BytesLike, _rate: BigNumberish, _rewardsPool: AddressLike, overrides?: NonPayableOverrides & { from?: string }): Promise<ContractDeployTransaction> {
      return super.getDeployTransaction(_appId, _rate, _rewardsPool, overrides || {});
    };
    override deploy(_appId: BytesLike, _rate: BigNumberish, _rewardsPool: AddressLike, overrides?: NonPayableOverrides & { from?: string }) {
      return super.deploy(_appId, _rate, _rewardsPool, overrides || {}) as Promise<RewardsProvider & {
        deploymentTransaction(): ContractTransactionResponse;
      }>;
    }
    override connect(runner: ContractRunner | null): RewardsProvider__factory {
      return super.connect(runner) as RewardsProvider__factory;
    }
    
    
    static readonly bytecode = _bytecode;
    static readonly abi = _abi;
    static createInterface(): RewardsProviderInterface {
      return new Interface(_abi) as RewardsProviderInterface;
    }
    
    override attach(address: string | Addressable): RewardsProvider {
      return super.attach(address) as RewardsProvider;
    }
  static connect(address: string, runner?: ContractRunner | null): RewardsProvider {
      return new Contract(address, _abi, runner) as unknown as RewardsProvider;
    }
  }

  
  