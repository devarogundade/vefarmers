/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

  import { Contract, Interface, type ContractRunner } from "ethers";
  import type { OracleInterface, OracleInterfaceInterface } from "../../../interfaces/OracleInterface.sol/OracleInterface.js";

  const _abi = [
  {
    "anonymous": false,
    "inputs": [
      {
        "indexed": true,
        "internalType": "address",
        "name": "fiat",
        "type": "address"
      },
      {
        "indexed": false,
        "internalType": "uint256",
        "name": "newPrice",
        "type": "uint256"
      },
      {
        "indexed": false,
        "internalType": "uint256",
        "name": "timestamp",
        "type": "uint256"
      }
    ],
    "name": "PriceUpdated",
    "type": "event"
  },
  {
    "inputs": [
      {
        "internalType": "address",
        "name": "fiat",
        "type": "address"
      }
    ],
    "name": "fiatPerVet",
    "outputs": [
      {
        "internalType": "uint256",
        "name": "",
        "type": "uint256"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  }
] as const;

  export class OracleInterface__factory {
    static readonly abi = _abi;
    static createInterface(): OracleInterfaceInterface {
      return new Interface(_abi) as OracleInterfaceInterface;
    }
    static connect(address: string, runner?: ContractRunner | null): OracleInterface {
      return new Contract(address, _abi, runner) as unknown as OracleInterface;
    }
  }
  